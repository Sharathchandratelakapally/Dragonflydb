name: benchmark-tests

on:
  pull_request:
  workflow_dispatch:
  #  schedule:
#    - cron: "0 9 * * *" # run at 6 AM UTC



jobs:
  benchmark:
    strategy:
      matrix:
        config:
          - apiVersion: "dragonflydb.io/v1alpha1"
            kind: "Dragonfly"
            metadata:
              labels:
                app.kubernetes.io/name: "dragonfly"
                app.kubernetes.io/instance: "dragonfly-sample"
                app.kubernetes.io/part-of: "dragonfly-operator"
                app.kubernetes.io/managed-by: "kustomize"
                app.kubernetes.io/created-by: "dragonfly-operator"
              name: "dragonfly-sample"
            spec:
              image: "ghcr.io/dragonflydb/dragonfly-weekly:latest"
              args: ["--cache_mode"]
              replicas: 2
              resources:
                requests:
                  cpu: "2"
                  memory: "2000Mi"
                limits:
                  cpu: "2"
                  memory: "2000Mi"

    runs-on: [self-hosted, linux, x86, benchmark]
#    runs-on: ubuntu-latest

    container:
      image: ghcr.io/romange/benchmark-dev:latest
      options: --cpus 2

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: install sude
        run: |
          apt-get update
          apt-get install sudo
          sudo -i 
          echo " " > $HOME/.kube/config
          cat  $HOME/.kube/config
          docker stop $(docker ps -a -q) 
          docker system prune -a


      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.9.0
        with:
          kubectl_version: v1.29.2
          cluster_name: action

      - name: install kubectl
        run: |
          sudo -i
          curl -LO https://dl.k8s.io/release/v1.29.2/bin/linux/amd64/kubectl
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          docker ps -a
          docker logs action-control-plane --tail=0 --follow


      - name: DEBUG
        run: |
          sudo -i 
          sleep 20
          sudo cat $HOME/.kube/config

      - name: Install the CRD and Operator
        run: |
          sudo -i 
          
          # Install the CRD and Operator
          kubectl apply -f https://raw.githubusercontent.com/dragonflydb/dragonfly-operator/main/manifests/dragonfly-operator.yaml
      - name: Apply Configuration
        run: |
          echo '${{ toJson(matrix.config) }}' | kubectl apply -f -

      - name: Wait For Service
        run: |
          kubectl wait dragonfly/dragonfly-sample --for=jsonpath='{.status.phase}'=ready --timeout=120s
          kubectl wait pods --selector app=dragonfly-sample --for condition=Ready --timeout=120s
          kubectl describe pod dragonfly-sample-0

      - name: Run Benchmark
        run: |
          nohup kubectl port-forward service/dragonfly-sample 6379:6379 &
          sleep 5
          redis-cli ping
          # run small memtier benchmark
          memtier_benchmark  --pipeline=30 --key-maximum=10000 -c 10 -t 8 --requests=500000 --expiry-range=10-100 --reconnect-interval=10000 --distinct-client-seed --hide-histogram

      - name: Server checks
        run: |
          pip3 install -r tools/requirements.txt
          python tools/benchmark_checks.py
